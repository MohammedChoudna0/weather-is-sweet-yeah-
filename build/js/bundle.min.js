$((function(){$("#button-addon").on("click",(function(){$(".in-container").hide(),$(".items-container").hide(),$(".bigItem-container").show()})),$("#home").on("click",(function(){console.log("home"),$(".in-container").show(),$(".items-container").show(),$(".bigItem-container").hide(),$(".forecast-container").hide()})),$(".dark-mode-button").on("click",(function(){$("body").toggleClass("dark-mode")}))}));var apiKey="4ac922fbb80b818412473ff51a5be5d0";function getCoordinates(e){var i="https://api.openweathermap.org/geo/1.0/direct?q="+e+"&limit=50&appid="+apiKey;return new Promise((function(t,n){$.get(i,(function(i){if(!(i&&i.length>0))return n("No se ha encontrado información de "+e),$(".bigItem-container").hide(),$(".forecast-container").hide(),void $(".error").show();t(i[0]),$(".error").hide()}))}))}function getWeather(e,i){var t="https://api.openweathermap.org/data/2.5/weather?lat="+i+"&lon="+e+"&appid="+apiKey;return new Promise((function(e,i){$.get(t,(function(t){t?e(t):i("No se ha podido obtener la información del tiempo para las coordenadas proporcionadas.")}))}))}async function getWeatherByCity(e){try{let i=await getCoordinates(e);return await getWeather(i.lon,i.lat)}catch(e){console.log(e)}}var data=[{city:"Washington"},{city:"London"},{city:"Paris"},{city:"Berlin"},{city:"Tokyo"},{city:"Beijing"},{city:"Moscow"},{city:"Canberra"},{city:"Ottawa"},{city:"Brasília"},{city:"Cairo"},{city:"Rome"},{city:"Mexico City"},{city:"Madrid"}];$((function(){var e=$(".items-container .row");function i(e){getWeatherByCity(e).then(e=>{if(console.log(e),e){$(".cityName").text(e.name),$(".description").text(e.weather[0].description),$(".temperature").text(Math.round(e.main.temp-273.15)+"°C"),$(".humidity").text(e.main.humidity+"%"),$(".wind").text(e.wind.speed+"m/s"),$(".sunrise").text(new Date(1e3*e.sys.sunrise).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})),$(".sunset").text(new Date(1e3*e.sys.sunset).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})),$(".direction").text(e.wind.deg+"°"),$(".visibility").text(e.visibility/1e3+" km");var i=t(e.weather[0].icon);$('.picture source[type="image/avif"]').attr("srcset",`build/img/${i}.avif`),$('.picture source[type="image/webp"]').attr("srcset",`build/img/${i}.webp`),$(".picture img").attr("src",`build/img/${i}.png`),i=""}else console.log("Weather info es indefined !!")})}function t(e){var i;switch(e){case"01d":i="01d";break;case"01n":i="01n";break;case"02d":case"03d":case"04d":i="02d";break;case"02n":case"03n":case"04n":i="02n";break;case"10d":case"09d":i="10d";break;case"10n":case"09n":i="10n";break;case"11d":i="11d";break;case"11n":i="11n";break;case"13d":i="13d";break;case"13n":i="13n";break;case"50d":case"50n":i="50d";default:i="default"}return i}function n(e,i){var t="https://api.openweathermap.org/data/2.5/forecast?lat="+e+"&lon="+i+"&appid="+apiKey;return new Promise((function(e,i){$.ajax({url:t,type:"GET",success:function(i){e(i)},error:function(e){i(e)}})}))}function a(e){getCoordinates(e).then(e=>n(e.lat,e.lon)).then(e=>{if(e){var i=e.list.filter((e,i)=>i%8==0);$(".forecast-container .row").empty(),i.forEach((e,i)=>{var n=new Date(1e3*e.dt),a=Math.round(e.main.temp-273.15),o=t(e.weather[0].icon),c=`\n          <div class="col-12 col-md border day${i+1} d-flex flex-column justify-content-center align-items-center">\n          <p>${n.toDateString()}</p>\n          <picture>\n            <source srcset="build/img/${o}.avif" type="image/avif">\n            <source srcset="build/img/${o}.webp" type="image/webp">\n            <img loading="lazy" src="build/img/${o}.jpg" alt="">\n          </picture>\n\n          <p class="fw-bold">${a} °C</p>\n          </div>\n          `;$(".forecast-container").show(),$(".forecast-container .row").append(c)})}else console.log("There is no forecast !!")}).catch(e=>{console.error(e)})}$.each(data,(function(n,o){getWeatherByCity(o.city).then(n=>{var c=(n.main.temp-273.15).toFixed(1),r=(3.6*n.wind.speed).toFixed(1),s=n.main.humidity,d=t(n.weather[0].icon),l=`<div class="col-12 col-md-6 col-lg-4 " id="${o.city}">\n      <div\n        class="item row my-3 justify-content-center mx-auto "\n      >\n        <div class="col-5 text-center m-0 p-0">\n          <picture >\n            <source\n              srcset="build/img/${d}.avif"\n              type="image/avif"\n            />\n            <source\n              srcset="build/img/${d}.webp"\n              type="image/webp"\n            />\n            <img\n              loading="lazy"\n              src="build/img/${d}.png"\n              alt="Icon cloudy"\n            />\n          </picture>\n        </div>\n        <div class="col-7 text-center">\n        <p class="p-0 m-0 text-start ">${o.city}</p>\n        <div class="row justify-content-between">\n            <div class="col-4">\n              <div>\n                <p class="item-info">${r} km/h</p>\n                <picture class="icon">\n                  <source\n                    srcset="build/img/icon-wind.avif"\n                    type="image/avif"\n                  />\n                  <source\n                    srcset="build/img/icon-wind.webp"\n                    type="image/webp"\n                  />\n                  <img\n                    class="item-icon"\n                    loading="lazy"\n                    src="build/img/icon-wind.png"\n                    alt="Icon wind"\n                  />\n                </picture>\n              </div>\n            </div>\n            <div class="col-4">\n              <p class="item-info">${s}  <br>     %</p>\n              <picture class="icon">\n                <source\n                  srcset="build/img/icon-humidity.avif"\n                  type="image/avif"\n                />\n                <source\n                  srcset="build/img/icon-humidity.webp"\n                  type="image/webp"\n                />\n                <img\n                  class="item-icon"\n                  loading="lazy"\n                  src="build/img/icon-humidity.png"\n                  alt="Icon humidity"\n                />\n              </picture>\n            </div>\n            <div class="col-4">\n              <p class="item-info">${c}<br> Cº</p>\n              <picture class="icon">\n                <source\n                  srcset="build/img/temperature.avif"\n                  type="image/avif"\n                />\n                <source\n                  srcset="build/img/temperature.webp"\n                  type="image/webp"\n                />\n                <img\n                  class="item-icon"\n                  loading="lazy"\n                  src="build/img/temperature.png"\n                  alt="Icon temperature"\n                />\n              </picture>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>`;e.append(l),$("#"+o.city).on("click",(function(){i(o.city),a(o.city),$(".bigItem-container").show(),$(".items-container").hide()}))})})),$("#location-form").on("submit",(function(e){e.preventDefault();var t=$("#location-input").val();i(t),a(t)})),$("#location-button").on("click",(function(){navigator.geolocation?($("#loader").show(),$(".items-container").hide(),navigator.geolocation.getCurrentPosition((function(e){var i=e.coords.latitude,a=e.coords.longitude;(function(e,i){return new Promise((n,a)=>{getWeather(i,e).then(e=>{console.log(e),$(".cityName").text(e.name),$(".description").text(e.weather[0].description),$(".temperature").text(Math.round(e.main.temp-273.15)+"°C"),$(".humidity").text(e.main.humidity+"%"),$(".wind").text(e.wind.speed+"m/s"),$(".sunrise").text(new Date(1e3*e.sys.sunrise).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})),$(".sunset").text(new Date(1e3*e.sys.sunset).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})),$(".direction").text(e.wind.deg+"°"),$(".visibility").text(e.visibility/1e3+" km");var i=t(e.weather[0].icon);$('.picture source[type="image/avif"]').attr("srcset",`build/img/${i}.avif`),$('.picture source[type="image/webp"]').attr("srcset",`build/img/${i}.webp`),$(".picture img").attr("src",`build/img/${i}.png`),i=""}),n()})})(i,a).then(function(e,i){n(e,i).then(e=>{if(e){var i=e.list.filter((e,i)=>i%8==0);$(".forecast-container .row").empty(),i.forEach((e,i)=>{var n=new Date(1e3*e.dt),a=Math.round(e.main.temp-273.15),o=t(e.weather[0].icon),c=`\n          <div class="col-12 col-md border day${i+1} d-flex flex-column justify-content-center align-items-center">\n          <p>${n.toDateString()}</p>\n\n          <picture>\n            <source srcset="build/img/${o}.avif" type="image/avif">\n            <source srcset="build/img/${o}.webp" type="image/webp">\n            <img loading="lazy" src="build/img/${o}.jpg" alt="">\n          </picture>\n          <p class="fw-bold">${a} °C</p>\n          </div>\n        \n          `;$(".forecast-container").show(),$(".forecast-container .row").append(c)})}else console.log("There is no forecast !!")}).catch(e=>{console.error(e)})}(i,a)).then(()=>{$("#loader").hide(),$(".error").hide(),$(".bigItem-container").show()})}))):console.log("Geolocalización no es soportada por este navegador.")}))}));
//# sourceMappingURL=bundle.js.map
